ARM GAS  /tmp/ccLOsia0.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_GPIO_Init:
  26              	.LFB138:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** #include <stdio.h>
  26:Core/Src/main.c **** #include <string.h>
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** #include "utils.h"
  29:Core/Src/main.c **** /* USER CODE END Includes */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
ARM GAS  /tmp/ccLOsia0.s 			page 2


  32:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* USER CODE END PTD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PD */
  38:Core/Src/main.c **** /* USER CODE END PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  46:Core/Src/main.c **** DAC_HandleTypeDef hdac1;
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** I2S_HandleTypeDef hi2s2;
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** UART_HandleTypeDef huart1;
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* USER CODE BEGIN PV */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* USER CODE END PV */
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  57:Core/Src/main.c **** void SystemClock_Config(void);
  58:Core/Src/main.c **** static void MX_GPIO_Init(void);
  59:Core/Src/main.c **** static void MX_I2S2_Init(void);
  60:Core/Src/main.c **** static void MX_DAC1_Init(void);
  61:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  62:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /* USER CODE END PFP */
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  67:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** /* USER CODE END 0 */
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** /**
  72:Core/Src/main.c ****   * @brief  The application entry point.
  73:Core/Src/main.c ****   * @retval int
  74:Core/Src/main.c ****   */
  75:Core/Src/main.c **** int main(void)
  76:Core/Src/main.c **** {
  77:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* USER CODE END 1 */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  84:Core/Src/main.c ****   HAL_Init();
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* USER CODE END Init */
ARM GAS  /tmp/ccLOsia0.s 			page 3


  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* Configure the system clock */
  91:Core/Src/main.c ****   SystemClock_Config();
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* USER CODE END SysInit */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* Initialize all configured peripherals */
  98:Core/Src/main.c ****   MX_GPIO_Init();
  99:Core/Src/main.c ****   MX_I2S2_Init();
 100:Core/Src/main.c ****   MX_DAC1_Init();
 101:Core/Src/main.c ****   MX_USART1_UART_Init();
 102:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 103:Core/Src/main.c ****   utils_print_init(&huart1, 100);
 104:Core/Src/main.c ****   /* USER CODE END 2 */
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   /* Infinite loop */
 107:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****   while (1)
 110:Core/Src/main.c ****   {
 111:Core/Src/main.c ****     /* USER CODE END WHILE */
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 114:Core/Src/main.c ****     uint16_t i2s_buf[20] = {0};
 115:Core/Src/main.c ****     char msg[256] = "";
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****     HAL_GPIO_TogglePin(LD2_GPIO_Port, LD2_Pin);
 118:Core/Src/main.c ****     HAL_Delay(500);
 119:Core/Src/main.c ****     HAL_I2S_Receive(&hi2s2, i2s_buf, sizeof(i2s_buf)/sizeof(*i2s_buf), 100);
 120:Core/Src/main.c **** 
 121:Core/Src/main.c ****     for (uint16_t i = 0; i < 20; i++) {
 122:Core/Src/main.c ****       sprintf(msg, "[%d] %lu", i, i2s_buf[i]);
 123:Core/Src/main.c ****       UTILS_PRINT_DEBUG(msg);
 124:Core/Src/main.c ****     }
 125:Core/Src/main.c ****   }
 126:Core/Src/main.c ****   /* USER CODE END 3 */
 127:Core/Src/main.c **** }
 128:Core/Src/main.c **** 
 129:Core/Src/main.c **** /**
 130:Core/Src/main.c ****   * @brief System Clock Configuration
 131:Core/Src/main.c ****   * @retval None
 132:Core/Src/main.c ****   */
 133:Core/Src/main.c **** void SystemClock_Config(void)
 134:Core/Src/main.c **** {
 135:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 136:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 137:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 138:Core/Src/main.c **** 
 139:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 140:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 141:Core/Src/main.c ****   */
 142:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 143:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 144:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 145:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
ARM GAS  /tmp/ccLOsia0.s 			page 4


 146:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 147:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 148:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 149:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 150:Core/Src/main.c ****   {
 151:Core/Src/main.c ****     Error_Handler();
 152:Core/Src/main.c ****   }
 153:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 154:Core/Src/main.c ****   */
 155:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 156:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 157:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 158:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 159:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 160:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 161:Core/Src/main.c **** 
 162:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 163:Core/Src/main.c ****   {
 164:Core/Src/main.c ****     Error_Handler();
 165:Core/Src/main.c ****   }
 166:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_I2S|RCC_PERIPHCLK_USART1;
 167:Core/Src/main.c ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
 168:Core/Src/main.c ****   PeriphClkInit.I2sClockSelection = RCC_I2SCLKSOURCE_SYSCLK;
 169:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 170:Core/Src/main.c ****   {
 171:Core/Src/main.c ****     Error_Handler();
 172:Core/Src/main.c ****   }
 173:Core/Src/main.c **** }
 174:Core/Src/main.c **** 
 175:Core/Src/main.c **** /**
 176:Core/Src/main.c ****   * @brief DAC1 Initialization Function
 177:Core/Src/main.c ****   * @param None
 178:Core/Src/main.c ****   * @retval None
 179:Core/Src/main.c ****   */
 180:Core/Src/main.c **** static void MX_DAC1_Init(void)
 181:Core/Src/main.c **** {
 182:Core/Src/main.c **** 
 183:Core/Src/main.c ****   /* USER CODE BEGIN DAC1_Init 0 */
 184:Core/Src/main.c **** 
 185:Core/Src/main.c ****   /* USER CODE END DAC1_Init 0 */
 186:Core/Src/main.c **** 
 187:Core/Src/main.c ****   DAC_ChannelConfTypeDef sConfig = {0};
 188:Core/Src/main.c **** 
 189:Core/Src/main.c ****   /* USER CODE BEGIN DAC1_Init 1 */
 190:Core/Src/main.c **** 
 191:Core/Src/main.c ****   /* USER CODE END DAC1_Init 1 */
 192:Core/Src/main.c ****   /** DAC Initialization
 193:Core/Src/main.c ****   */
 194:Core/Src/main.c ****   hdac1.Instance = DAC1;
 195:Core/Src/main.c ****   if (HAL_DAC_Init(&hdac1) != HAL_OK)
 196:Core/Src/main.c ****   {
 197:Core/Src/main.c ****     Error_Handler();
 198:Core/Src/main.c ****   }
 199:Core/Src/main.c ****   /** DAC channel OUT1 config
 200:Core/Src/main.c ****   */
 201:Core/Src/main.c ****   sConfig.DAC_Trigger = DAC_TRIGGER_NONE;
 202:Core/Src/main.c ****   sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
ARM GAS  /tmp/ccLOsia0.s 			page 5


 203:Core/Src/main.c ****   if (HAL_DAC_ConfigChannel(&hdac1, &sConfig, DAC_CHANNEL_1) != HAL_OK)
 204:Core/Src/main.c ****   {
 205:Core/Src/main.c ****     Error_Handler();
 206:Core/Src/main.c ****   }
 207:Core/Src/main.c ****   /* USER CODE BEGIN DAC1_Init 2 */
 208:Core/Src/main.c **** 
 209:Core/Src/main.c ****   /* USER CODE END DAC1_Init 2 */
 210:Core/Src/main.c **** 
 211:Core/Src/main.c **** }
 212:Core/Src/main.c **** 
 213:Core/Src/main.c **** /**
 214:Core/Src/main.c ****   * @brief I2S2 Initialization Function
 215:Core/Src/main.c ****   * @param None
 216:Core/Src/main.c ****   * @retval None
 217:Core/Src/main.c ****   */
 218:Core/Src/main.c **** static void MX_I2S2_Init(void)
 219:Core/Src/main.c **** {
 220:Core/Src/main.c **** 
 221:Core/Src/main.c ****   /* USER CODE BEGIN I2S2_Init 0 */
 222:Core/Src/main.c **** 
 223:Core/Src/main.c ****   /* USER CODE END I2S2_Init 0 */
 224:Core/Src/main.c **** 
 225:Core/Src/main.c ****   /* USER CODE BEGIN I2S2_Init 1 */
 226:Core/Src/main.c **** 
 227:Core/Src/main.c ****   /* USER CODE END I2S2_Init 1 */
 228:Core/Src/main.c ****   hi2s2.Instance = SPI2;
 229:Core/Src/main.c ****   hi2s2.Init.Mode = I2S_MODE_SLAVE_RX;
 230:Core/Src/main.c ****   hi2s2.Init.Standard = I2S_STANDARD_PHILIPS;
 231:Core/Src/main.c ****   hi2s2.Init.DataFormat = I2S_DATAFORMAT_16B;
 232:Core/Src/main.c ****   hi2s2.Init.MCLKOutput = I2S_MCLKOUTPUT_DISABLE;
 233:Core/Src/main.c ****   hi2s2.Init.AudioFreq = I2S_AUDIOFREQ_44K;
 234:Core/Src/main.c ****   hi2s2.Init.CPOL = I2S_CPOL_LOW;
 235:Core/Src/main.c ****   hi2s2.Init.ClockSource = I2S_CLOCK_SYSCLK;
 236:Core/Src/main.c ****   hi2s2.Init.FullDuplexMode = I2S_FULLDUPLEXMODE_DISABLE;
 237:Core/Src/main.c ****   if (HAL_I2S_Init(&hi2s2) != HAL_OK)
 238:Core/Src/main.c ****   {
 239:Core/Src/main.c ****     Error_Handler();
 240:Core/Src/main.c ****   }
 241:Core/Src/main.c ****   /* USER CODE BEGIN I2S2_Init 2 */
 242:Core/Src/main.c **** 
 243:Core/Src/main.c ****   /* USER CODE END I2S2_Init 2 */
 244:Core/Src/main.c **** 
 245:Core/Src/main.c **** }
 246:Core/Src/main.c **** 
 247:Core/Src/main.c **** /**
 248:Core/Src/main.c ****   * @brief USART1 Initialization Function
 249:Core/Src/main.c ****   * @param None
 250:Core/Src/main.c ****   * @retval None
 251:Core/Src/main.c ****   */
 252:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 253:Core/Src/main.c **** {
 254:Core/Src/main.c **** 
 255:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 256:Core/Src/main.c **** 
 257:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 258:Core/Src/main.c **** 
 259:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
ARM GAS  /tmp/ccLOsia0.s 			page 6


 260:Core/Src/main.c **** 
 261:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 262:Core/Src/main.c ****   huart1.Instance = USART1;
 263:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 264:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 265:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 266:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 267:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 268:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 269:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 270:Core/Src/main.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 271:Core/Src/main.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 272:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 273:Core/Src/main.c ****   {
 274:Core/Src/main.c ****     Error_Handler();
 275:Core/Src/main.c ****   }
 276:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 277:Core/Src/main.c **** 
 278:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 279:Core/Src/main.c **** 
 280:Core/Src/main.c **** }
 281:Core/Src/main.c **** 
 282:Core/Src/main.c **** /**
 283:Core/Src/main.c ****   * @brief GPIO Initialization Function
 284:Core/Src/main.c ****   * @param None
 285:Core/Src/main.c ****   * @retval None
 286:Core/Src/main.c ****   */
 287:Core/Src/main.c **** static void MX_GPIO_Init(void)
 288:Core/Src/main.c **** {
  28              		.loc 1 288 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 40
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 14, -4
  37 0002 8AB0     		sub	sp, sp, #40
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 48
 289:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  40              		.loc 1 289 3 view .LVU1
  41              		.loc 1 289 20 is_stmt 0 view .LVU2
  42 0004 0024     		movs	r4, #0
  43 0006 0594     		str	r4, [sp, #20]
  44 0008 0694     		str	r4, [sp, #24]
  45 000a 0794     		str	r4, [sp, #28]
  46 000c 0894     		str	r4, [sp, #32]
  47 000e 0994     		str	r4, [sp, #36]
 290:Core/Src/main.c **** 
 291:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 292:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  48              		.loc 1 292 3 is_stmt 1 view .LVU3
  49              	.LBB4:
  50              		.loc 1 292 3 view .LVU4
  51              		.loc 1 292 3 view .LVU5
ARM GAS  /tmp/ccLOsia0.s 			page 7


  52 0010 204B     		ldr	r3, .L3
  53 0012 5A69     		ldr	r2, [r3, #20]
  54 0014 42F40022 		orr	r2, r2, #524288
  55 0018 5A61     		str	r2, [r3, #20]
  56              		.loc 1 292 3 view .LVU6
  57 001a 5A69     		ldr	r2, [r3, #20]
  58 001c 02F40022 		and	r2, r2, #524288
  59 0020 0192     		str	r2, [sp, #4]
  60              		.loc 1 292 3 view .LVU7
  61 0022 019A     		ldr	r2, [sp, #4]
  62              	.LBE4:
  63              		.loc 1 292 3 view .LVU8
 293:Core/Src/main.c ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  64              		.loc 1 293 3 view .LVU9
  65              	.LBB5:
  66              		.loc 1 293 3 view .LVU10
  67              		.loc 1 293 3 view .LVU11
  68 0024 5A69     		ldr	r2, [r3, #20]
  69 0026 42F48002 		orr	r2, r2, #4194304
  70 002a 5A61     		str	r2, [r3, #20]
  71              		.loc 1 293 3 view .LVU12
  72 002c 5A69     		ldr	r2, [r3, #20]
  73 002e 02F48002 		and	r2, r2, #4194304
  74 0032 0292     		str	r2, [sp, #8]
  75              		.loc 1 293 3 view .LVU13
  76 0034 029A     		ldr	r2, [sp, #8]
  77              	.LBE5:
  78              		.loc 1 293 3 view .LVU14
 294:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  79              		.loc 1 294 3 view .LVU15
  80              	.LBB6:
  81              		.loc 1 294 3 view .LVU16
  82              		.loc 1 294 3 view .LVU17
  83 0036 5A69     		ldr	r2, [r3, #20]
  84 0038 42F40032 		orr	r2, r2, #131072
  85 003c 5A61     		str	r2, [r3, #20]
  86              		.loc 1 294 3 view .LVU18
  87 003e 5A69     		ldr	r2, [r3, #20]
  88 0040 02F40032 		and	r2, r2, #131072
  89 0044 0392     		str	r2, [sp, #12]
  90              		.loc 1 294 3 view .LVU19
  91 0046 039A     		ldr	r2, [sp, #12]
  92              	.LBE6:
  93              		.loc 1 294 3 view .LVU20
 295:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  94              		.loc 1 295 3 view .LVU21
  95              	.LBB7:
  96              		.loc 1 295 3 view .LVU22
  97              		.loc 1 295 3 view .LVU23
  98 0048 5A69     		ldr	r2, [r3, #20]
  99 004a 42F48022 		orr	r2, r2, #262144
 100 004e 5A61     		str	r2, [r3, #20]
 101              		.loc 1 295 3 view .LVU24
 102 0050 5B69     		ldr	r3, [r3, #20]
 103 0052 03F48023 		and	r3, r3, #262144
 104 0056 0493     		str	r3, [sp, #16]
 105              		.loc 1 295 3 view .LVU25
ARM GAS  /tmp/ccLOsia0.s 			page 8


 106 0058 049B     		ldr	r3, [sp, #16]
 107              	.LBE7:
 108              		.loc 1 295 3 view .LVU26
 296:Core/Src/main.c **** 
 297:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 298:Core/Src/main.c ****   HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
 109              		.loc 1 298 3 view .LVU27
 110 005a 2246     		mov	r2, r4
 111 005c 2021     		movs	r1, #32
 112 005e 4FF09040 		mov	r0, #1207959552
 113 0062 FFF7FEFF 		bl	HAL_GPIO_WritePin
 114              	.LVL0:
 299:Core/Src/main.c **** 
 300:Core/Src/main.c ****   /*Configure GPIO pin : B1_Pin */
 301:Core/Src/main.c ****   GPIO_InitStruct.Pin = B1_Pin;
 115              		.loc 1 301 3 view .LVU28
 116              		.loc 1 301 23 is_stmt 0 view .LVU29
 117 0066 4FF40053 		mov	r3, #8192
 118 006a 0593     		str	r3, [sp, #20]
 302:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 119              		.loc 1 302 3 is_stmt 1 view .LVU30
 120              		.loc 1 302 24 is_stmt 0 view .LVU31
 121 006c 0A4B     		ldr	r3, .L3+4
 122 006e 0693     		str	r3, [sp, #24]
 303:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 123              		.loc 1 303 3 is_stmt 1 view .LVU32
 124              		.loc 1 303 24 is_stmt 0 view .LVU33
 125 0070 0794     		str	r4, [sp, #28]
 304:Core/Src/main.c ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 126              		.loc 1 304 3 is_stmt 1 view .LVU34
 127 0072 05A9     		add	r1, sp, #20
 128 0074 0948     		ldr	r0, .L3+8
 129 0076 FFF7FEFF 		bl	HAL_GPIO_Init
 130              	.LVL1:
 305:Core/Src/main.c **** 
 306:Core/Src/main.c ****   /*Configure GPIO pin : LD2_Pin */
 307:Core/Src/main.c ****   GPIO_InitStruct.Pin = LD2_Pin;
 131              		.loc 1 307 3 view .LVU35
 132              		.loc 1 307 23 is_stmt 0 view .LVU36
 133 007a 2023     		movs	r3, #32
 134 007c 0593     		str	r3, [sp, #20]
 308:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 135              		.loc 1 308 3 is_stmt 1 view .LVU37
 136              		.loc 1 308 24 is_stmt 0 view .LVU38
 137 007e 0123     		movs	r3, #1
 138 0080 0693     		str	r3, [sp, #24]
 309:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 139              		.loc 1 309 3 is_stmt 1 view .LVU39
 140              		.loc 1 309 24 is_stmt 0 view .LVU40
 141 0082 0794     		str	r4, [sp, #28]
 310:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 142              		.loc 1 310 3 is_stmt 1 view .LVU41
 143              		.loc 1 310 25 is_stmt 0 view .LVU42
 144 0084 0894     		str	r4, [sp, #32]
 311:Core/Src/main.c ****   HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 145              		.loc 1 311 3 is_stmt 1 view .LVU43
 146 0086 05A9     		add	r1, sp, #20
ARM GAS  /tmp/ccLOsia0.s 			page 9


 147 0088 4FF09040 		mov	r0, #1207959552
 148 008c FFF7FEFF 		bl	HAL_GPIO_Init
 149              	.LVL2:
 312:Core/Src/main.c **** 
 313:Core/Src/main.c **** }
 150              		.loc 1 313 1 is_stmt 0 view .LVU44
 151 0090 0AB0     		add	sp, sp, #40
 152              	.LCFI2:
 153              		.cfi_def_cfa_offset 8
 154              		@ sp needed
 155 0092 10BD     		pop	{r4, pc}
 156              	.L4:
 157              		.align	2
 158              	.L3:
 159 0094 00100240 		.word	1073876992
 160 0098 00002110 		.word	270598144
 161 009c 00080048 		.word	1207961600
 162              		.cfi_endproc
 163              	.LFE138:
 165              		.section	.text.Error_Handler,"ax",%progbits
 166              		.align	1
 167              		.global	Error_Handler
 168              		.syntax unified
 169              		.thumb
 170              		.thumb_func
 171              		.fpu fpv4-sp-d16
 173              	Error_Handler:
 174              	.LFB139:
 314:Core/Src/main.c **** 
 315:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 316:Core/Src/main.c **** 
 317:Core/Src/main.c **** /* USER CODE END 4 */
 318:Core/Src/main.c **** 
 319:Core/Src/main.c **** /**
 320:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 321:Core/Src/main.c ****   * @retval None
 322:Core/Src/main.c ****   */
 323:Core/Src/main.c **** void Error_Handler(void)
 324:Core/Src/main.c **** {
 175              		.loc 1 324 1 is_stmt 1 view -0
 176              		.cfi_startproc
 177              		@ Volatile: function does not return.
 178              		@ args = 0, pretend = 0, frame = 0
 179              		@ frame_needed = 0, uses_anonymous_args = 0
 180              		@ link register save eliminated.
 325:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 326:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 327:Core/Src/main.c ****   __disable_irq();
 181              		.loc 1 327 3 view .LVU46
 182              	.LBB8:
 183              	.LBI8:
 184              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
ARM GAS  /tmp/ccLOsia0.s 			page 10


   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
ARM GAS  /tmp/ccLOsia0.s 			page 11


  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
ARM GAS  /tmp/ccLOsia0.s 			page 12


 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 185              		.loc 2 140 27 view .LVU47
 186              	.LBB9:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 187              		.loc 2 142 3 view .LVU48
 188              		.syntax unified
 189              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 190 0000 72B6     		cpsid i
 191              	@ 0 "" 2
 192              		.thumb
 193              		.syntax unified
 194              	.L6:
 195              	.LBE9:
 196              	.LBE8:
 328:Core/Src/main.c ****   while (1)
 197              		.loc 1 328 3 discriminator 1 view .LVU49
 329:Core/Src/main.c ****   {
 330:Core/Src/main.c ****   }
 198              		.loc 1 330 3 discriminator 1 view .LVU50
 328:Core/Src/main.c ****   while (1)
 199              		.loc 1 328 9 discriminator 1 view .LVU51
 200 0002 FEE7     		b	.L6
 201              		.cfi_endproc
 202              	.LFE139:
 204              		.section	.text.MX_I2S2_Init,"ax",%progbits
 205              		.align	1
 206              		.syntax unified
 207              		.thumb
 208              		.thumb_func
 209              		.fpu fpv4-sp-d16
 211              	MX_I2S2_Init:
 212              	.LFB136:
 219:Core/Src/main.c **** 
 213              		.loc 1 219 1 view -0
 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccLOsia0.s 			page 13


 216              		@ frame_needed = 0, uses_anonymous_args = 0
 217 0000 08B5     		push	{r3, lr}
 218              	.LCFI3:
 219              		.cfi_def_cfa_offset 8
 220              		.cfi_offset 3, -8
 221              		.cfi_offset 14, -4
 228:Core/Src/main.c ****   hi2s2.Init.Mode = I2S_MODE_SLAVE_RX;
 222              		.loc 1 228 3 view .LVU53
 228:Core/Src/main.c ****   hi2s2.Init.Mode = I2S_MODE_SLAVE_RX;
 223              		.loc 1 228 18 is_stmt 0 view .LVU54
 224 0002 0B48     		ldr	r0, .L11
 225 0004 0B4B     		ldr	r3, .L11+4
 226 0006 0360     		str	r3, [r0]
 229:Core/Src/main.c ****   hi2s2.Init.Standard = I2S_STANDARD_PHILIPS;
 227              		.loc 1 229 3 is_stmt 1 view .LVU55
 229:Core/Src/main.c ****   hi2s2.Init.Standard = I2S_STANDARD_PHILIPS;
 228              		.loc 1 229 19 is_stmt 0 view .LVU56
 229 0008 4FF48073 		mov	r3, #256
 230 000c 4360     		str	r3, [r0, #4]
 230:Core/Src/main.c ****   hi2s2.Init.DataFormat = I2S_DATAFORMAT_16B;
 231              		.loc 1 230 3 is_stmt 1 view .LVU57
 230:Core/Src/main.c ****   hi2s2.Init.DataFormat = I2S_DATAFORMAT_16B;
 232              		.loc 1 230 23 is_stmt 0 view .LVU58
 233 000e 0023     		movs	r3, #0
 234 0010 8360     		str	r3, [r0, #8]
 231:Core/Src/main.c ****   hi2s2.Init.MCLKOutput = I2S_MCLKOUTPUT_DISABLE;
 235              		.loc 1 231 3 is_stmt 1 view .LVU59
 231:Core/Src/main.c ****   hi2s2.Init.MCLKOutput = I2S_MCLKOUTPUT_DISABLE;
 236              		.loc 1 231 25 is_stmt 0 view .LVU60
 237 0012 C360     		str	r3, [r0, #12]
 232:Core/Src/main.c ****   hi2s2.Init.AudioFreq = I2S_AUDIOFREQ_44K;
 238              		.loc 1 232 3 is_stmt 1 view .LVU61
 232:Core/Src/main.c ****   hi2s2.Init.AudioFreq = I2S_AUDIOFREQ_44K;
 239              		.loc 1 232 25 is_stmt 0 view .LVU62
 240 0014 0361     		str	r3, [r0, #16]
 233:Core/Src/main.c ****   hi2s2.Init.CPOL = I2S_CPOL_LOW;
 241              		.loc 1 233 3 is_stmt 1 view .LVU63
 233:Core/Src/main.c ****   hi2s2.Init.CPOL = I2S_CPOL_LOW;
 242              		.loc 1 233 24 is_stmt 0 view .LVU64
 243 0016 4AF64442 		movw	r2, #44100
 244 001a 4261     		str	r2, [r0, #20]
 234:Core/Src/main.c ****   hi2s2.Init.ClockSource = I2S_CLOCK_SYSCLK;
 245              		.loc 1 234 3 is_stmt 1 view .LVU65
 234:Core/Src/main.c ****   hi2s2.Init.ClockSource = I2S_CLOCK_SYSCLK;
 246              		.loc 1 234 19 is_stmt 0 view .LVU66
 247 001c 8361     		str	r3, [r0, #24]
 235:Core/Src/main.c ****   hi2s2.Init.FullDuplexMode = I2S_FULLDUPLEXMODE_DISABLE;
 248              		.loc 1 235 3 is_stmt 1 view .LVU67
 235:Core/Src/main.c ****   hi2s2.Init.FullDuplexMode = I2S_FULLDUPLEXMODE_DISABLE;
 249              		.loc 1 235 26 is_stmt 0 view .LVU68
 250 001e 0222     		movs	r2, #2
 251 0020 C261     		str	r2, [r0, #28]
 236:Core/Src/main.c ****   if (HAL_I2S_Init(&hi2s2) != HAL_OK)
 252              		.loc 1 236 3 is_stmt 1 view .LVU69
 236:Core/Src/main.c ****   if (HAL_I2S_Init(&hi2s2) != HAL_OK)
 253              		.loc 1 236 29 is_stmt 0 view .LVU70
 254 0022 0362     		str	r3, [r0, #32]
ARM GAS  /tmp/ccLOsia0.s 			page 14


 237:Core/Src/main.c ****   {
 255              		.loc 1 237 3 is_stmt 1 view .LVU71
 237:Core/Src/main.c ****   {
 256              		.loc 1 237 7 is_stmt 0 view .LVU72
 257 0024 FFF7FEFF 		bl	HAL_I2S_Init
 258              	.LVL3:
 237:Core/Src/main.c ****   {
 259              		.loc 1 237 6 view .LVU73
 260 0028 00B9     		cbnz	r0, .L10
 245:Core/Src/main.c **** 
 261              		.loc 1 245 1 view .LVU74
 262 002a 08BD     		pop	{r3, pc}
 263              	.L10:
 239:Core/Src/main.c ****   }
 264              		.loc 1 239 5 is_stmt 1 view .LVU75
 265 002c FFF7FEFF 		bl	Error_Handler
 266              	.LVL4:
 267              	.L12:
 268              		.align	2
 269              	.L11:
 270 0030 00000000 		.word	hi2s2
 271 0034 00380040 		.word	1073756160
 272              		.cfi_endproc
 273              	.LFE136:
 275              		.section	.text.MX_DAC1_Init,"ax",%progbits
 276              		.align	1
 277              		.syntax unified
 278              		.thumb
 279              		.thumb_func
 280              		.fpu fpv4-sp-d16
 282              	MX_DAC1_Init:
 283              	.LFB135:
 181:Core/Src/main.c **** 
 284              		.loc 1 181 1 view -0
 285              		.cfi_startproc
 286              		@ args = 0, pretend = 0, frame = 16
 287              		@ frame_needed = 0, uses_anonymous_args = 0
 288 0000 00B5     		push	{lr}
 289              	.LCFI4:
 290              		.cfi_def_cfa_offset 4
 291              		.cfi_offset 14, -4
 292 0002 85B0     		sub	sp, sp, #20
 293              	.LCFI5:
 294              		.cfi_def_cfa_offset 24
 187:Core/Src/main.c **** 
 295              		.loc 1 187 3 view .LVU77
 187:Core/Src/main.c **** 
 296              		.loc 1 187 26 is_stmt 0 view .LVU78
 297 0004 0023     		movs	r3, #0
 298 0006 0193     		str	r3, [sp, #4]
 299 0008 0293     		str	r3, [sp, #8]
 300 000a 0393     		str	r3, [sp, #12]
 194:Core/Src/main.c ****   if (HAL_DAC_Init(&hdac1) != HAL_OK)
 301              		.loc 1 194 3 is_stmt 1 view .LVU79
 194:Core/Src/main.c ****   if (HAL_DAC_Init(&hdac1) != HAL_OK)
 302              		.loc 1 194 18 is_stmt 0 view .LVU80
 303 000c 0A48     		ldr	r0, .L19
ARM GAS  /tmp/ccLOsia0.s 			page 15


 304 000e 0B4B     		ldr	r3, .L19+4
 305 0010 0360     		str	r3, [r0]
 195:Core/Src/main.c ****   {
 306              		.loc 1 195 3 is_stmt 1 view .LVU81
 195:Core/Src/main.c ****   {
 307              		.loc 1 195 7 is_stmt 0 view .LVU82
 308 0012 FFF7FEFF 		bl	HAL_DAC_Init
 309              	.LVL5:
 195:Core/Src/main.c ****   {
 310              		.loc 1 195 6 view .LVU83
 311 0016 50B9     		cbnz	r0, .L17
 201:Core/Src/main.c ****   sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 312              		.loc 1 201 3 is_stmt 1 view .LVU84
 201:Core/Src/main.c ****   sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 313              		.loc 1 201 23 is_stmt 0 view .LVU85
 314 0018 0022     		movs	r2, #0
 315 001a 0192     		str	r2, [sp, #4]
 202:Core/Src/main.c ****   if (HAL_DAC_ConfigChannel(&hdac1, &sConfig, DAC_CHANNEL_1) != HAL_OK)
 316              		.loc 1 202 3 is_stmt 1 view .LVU86
 202:Core/Src/main.c ****   if (HAL_DAC_ConfigChannel(&hdac1, &sConfig, DAC_CHANNEL_1) != HAL_OK)
 317              		.loc 1 202 28 is_stmt 0 view .LVU87
 318 001c 0292     		str	r2, [sp, #8]
 203:Core/Src/main.c ****   {
 319              		.loc 1 203 3 is_stmt 1 view .LVU88
 203:Core/Src/main.c ****   {
 320              		.loc 1 203 7 is_stmt 0 view .LVU89
 321 001e 01A9     		add	r1, sp, #4
 322 0020 0548     		ldr	r0, .L19
 323 0022 FFF7FEFF 		bl	HAL_DAC_ConfigChannel
 324              	.LVL6:
 203:Core/Src/main.c ****   {
 325              		.loc 1 203 6 view .LVU90
 326 0026 20B9     		cbnz	r0, .L18
 211:Core/Src/main.c **** 
 327              		.loc 1 211 1 view .LVU91
 328 0028 05B0     		add	sp, sp, #20
 329              	.LCFI6:
 330              		.cfi_remember_state
 331              		.cfi_def_cfa_offset 4
 332              		@ sp needed
 333 002a 5DF804FB 		ldr	pc, [sp], #4
 334              	.L17:
 335              	.LCFI7:
 336              		.cfi_restore_state
 197:Core/Src/main.c ****   }
 337              		.loc 1 197 5 is_stmt 1 view .LVU92
 338 002e FFF7FEFF 		bl	Error_Handler
 339              	.LVL7:
 340              	.L18:
 205:Core/Src/main.c ****   }
 341              		.loc 1 205 5 view .LVU93
 342 0032 FFF7FEFF 		bl	Error_Handler
 343              	.LVL8:
 344              	.L20:
 345 0036 00BF     		.align	2
 346              	.L19:
 347 0038 00000000 		.word	hdac1
ARM GAS  /tmp/ccLOsia0.s 			page 16


 348 003c 00740040 		.word	1073771520
 349              		.cfi_endproc
 350              	.LFE135:
 352              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 353              		.align	1
 354              		.syntax unified
 355              		.thumb
 356              		.thumb_func
 357              		.fpu fpv4-sp-d16
 359              	MX_USART1_UART_Init:
 360              	.LFB137:
 253:Core/Src/main.c **** 
 361              		.loc 1 253 1 view -0
 362              		.cfi_startproc
 363              		@ args = 0, pretend = 0, frame = 0
 364              		@ frame_needed = 0, uses_anonymous_args = 0
 365 0000 08B5     		push	{r3, lr}
 366              	.LCFI8:
 367              		.cfi_def_cfa_offset 8
 368              		.cfi_offset 3, -8
 369              		.cfi_offset 14, -4
 262:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 370              		.loc 1 262 3 view .LVU95
 262:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 371              		.loc 1 262 19 is_stmt 0 view .LVU96
 372 0002 0B48     		ldr	r0, .L25
 373 0004 0B4B     		ldr	r3, .L25+4
 374 0006 0360     		str	r3, [r0]
 263:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 375              		.loc 1 263 3 is_stmt 1 view .LVU97
 263:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 376              		.loc 1 263 24 is_stmt 0 view .LVU98
 377 0008 4FF4E133 		mov	r3, #115200
 378 000c 4360     		str	r3, [r0, #4]
 264:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 379              		.loc 1 264 3 is_stmt 1 view .LVU99
 264:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 380              		.loc 1 264 26 is_stmt 0 view .LVU100
 381 000e 0023     		movs	r3, #0
 382 0010 8360     		str	r3, [r0, #8]
 265:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 383              		.loc 1 265 3 is_stmt 1 view .LVU101
 265:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 384              		.loc 1 265 24 is_stmt 0 view .LVU102
 385 0012 C360     		str	r3, [r0, #12]
 266:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 386              		.loc 1 266 3 is_stmt 1 view .LVU103
 266:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 387              		.loc 1 266 22 is_stmt 0 view .LVU104
 388 0014 0361     		str	r3, [r0, #16]
 267:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 389              		.loc 1 267 3 is_stmt 1 view .LVU105
 267:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 390              		.loc 1 267 20 is_stmt 0 view .LVU106
 391 0016 0C22     		movs	r2, #12
 392 0018 4261     		str	r2, [r0, #20]
 268:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
ARM GAS  /tmp/ccLOsia0.s 			page 17


 393              		.loc 1 268 3 is_stmt 1 view .LVU107
 268:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 394              		.loc 1 268 25 is_stmt 0 view .LVU108
 395 001a 8361     		str	r3, [r0, #24]
 269:Core/Src/main.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 396              		.loc 1 269 3 is_stmt 1 view .LVU109
 269:Core/Src/main.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 397              		.loc 1 269 28 is_stmt 0 view .LVU110
 398 001c C361     		str	r3, [r0, #28]
 270:Core/Src/main.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 399              		.loc 1 270 3 is_stmt 1 view .LVU111
 270:Core/Src/main.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 400              		.loc 1 270 30 is_stmt 0 view .LVU112
 401 001e 0362     		str	r3, [r0, #32]
 271:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 402              		.loc 1 271 3 is_stmt 1 view .LVU113
 271:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 403              		.loc 1 271 38 is_stmt 0 view .LVU114
 404 0020 4362     		str	r3, [r0, #36]
 272:Core/Src/main.c ****   {
 405              		.loc 1 272 3 is_stmt 1 view .LVU115
 272:Core/Src/main.c ****   {
 406              		.loc 1 272 7 is_stmt 0 view .LVU116
 407 0022 FFF7FEFF 		bl	HAL_UART_Init
 408              	.LVL9:
 272:Core/Src/main.c ****   {
 409              		.loc 1 272 6 view .LVU117
 410 0026 00B9     		cbnz	r0, .L24
 280:Core/Src/main.c **** 
 411              		.loc 1 280 1 view .LVU118
 412 0028 08BD     		pop	{r3, pc}
 413              	.L24:
 274:Core/Src/main.c ****   }
 414              		.loc 1 274 5 is_stmt 1 view .LVU119
 415 002a FFF7FEFF 		bl	Error_Handler
 416              	.LVL10:
 417              	.L26:
 418 002e 00BF     		.align	2
 419              	.L25:
 420 0030 00000000 		.word	huart1
 421 0034 00380140 		.word	1073821696
 422              		.cfi_endproc
 423              	.LFE137:
 425              		.section	.text.SystemClock_Config,"ax",%progbits
 426              		.align	1
 427              		.global	SystemClock_Config
 428              		.syntax unified
 429              		.thumb
 430              		.thumb_func
 431              		.fpu fpv4-sp-d16
 433              	SystemClock_Config:
 434              	.LFB134:
 134:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 435              		.loc 1 134 1 view -0
 436              		.cfi_startproc
 437              		@ args = 0, pretend = 0, frame = 152
 438              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccLOsia0.s 			page 18


 439 0000 10B5     		push	{r4, lr}
 440              	.LCFI9:
 441              		.cfi_def_cfa_offset 8
 442              		.cfi_offset 4, -8
 443              		.cfi_offset 14, -4
 444 0002 A6B0     		sub	sp, sp, #152
 445              	.LCFI10:
 446              		.cfi_def_cfa_offset 160
 135:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 447              		.loc 1 135 3 view .LVU121
 135:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 448              		.loc 1 135 22 is_stmt 0 view .LVU122
 449 0004 0024     		movs	r4, #0
 450 0006 1D94     		str	r4, [sp, #116]
 451 0008 1E94     		str	r4, [sp, #120]
 452 000a 2194     		str	r4, [sp, #132]
 136:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 453              		.loc 1 136 3 is_stmt 1 view .LVU123
 136:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 454              		.loc 1 136 22 is_stmt 0 view .LVU124
 455 000c 1794     		str	r4, [sp, #92]
 456 000e 1894     		str	r4, [sp, #96]
 457 0010 1994     		str	r4, [sp, #100]
 458 0012 1A94     		str	r4, [sp, #104]
 459 0014 1B94     		str	r4, [sp, #108]
 137:Core/Src/main.c **** 
 460              		.loc 1 137 3 is_stmt 1 view .LVU125
 137:Core/Src/main.c **** 
 461              		.loc 1 137 28 is_stmt 0 view .LVU126
 462 0016 5822     		movs	r2, #88
 463 0018 2146     		mov	r1, r4
 464 001a 01A8     		add	r0, sp, #4
 465 001c FFF7FEFF 		bl	memset
 466              	.LVL11:
 142:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 467              		.loc 1 142 3 is_stmt 1 view .LVU127
 142:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 468              		.loc 1 142 36 is_stmt 0 view .LVU128
 469 0020 0223     		movs	r3, #2
 470 0022 1C93     		str	r3, [sp, #112]
 143:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 471              		.loc 1 143 3 is_stmt 1 view .LVU129
 143:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 472              		.loc 1 143 30 is_stmt 0 view .LVU130
 473 0024 0122     		movs	r2, #1
 474 0026 1F92     		str	r2, [sp, #124]
 144:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 475              		.loc 1 144 3 is_stmt 1 view .LVU131
 144:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 476              		.loc 1 144 41 is_stmt 0 view .LVU132
 477 0028 1022     		movs	r2, #16
 478 002a 2092     		str	r2, [sp, #128]
 145:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 479              		.loc 1 145 3 is_stmt 1 view .LVU133
 145:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 480              		.loc 1 145 34 is_stmt 0 view .LVU134
 481 002c 2293     		str	r3, [sp, #136]
ARM GAS  /tmp/ccLOsia0.s 			page 19


 146:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 482              		.loc 1 146 3 is_stmt 1 view .LVU135
 146:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 483              		.loc 1 146 35 is_stmt 0 view .LVU136
 484 002e 4FF40043 		mov	r3, #32768
 485 0032 2393     		str	r3, [sp, #140]
 147:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 486              		.loc 1 147 3 is_stmt 1 view .LVU137
 147:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 487              		.loc 1 147 32 is_stmt 0 view .LVU138
 488 0034 4FF4E013 		mov	r3, #1835008
 489 0038 2493     		str	r3, [sp, #144]
 148:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 490              		.loc 1 148 3 is_stmt 1 view .LVU139
 148:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 491              		.loc 1 148 32 is_stmt 0 view .LVU140
 492 003a 2594     		str	r4, [sp, #148]
 149:Core/Src/main.c ****   {
 493              		.loc 1 149 3 is_stmt 1 view .LVU141
 149:Core/Src/main.c ****   {
 494              		.loc 1 149 7 is_stmt 0 view .LVU142
 495 003c 1CA8     		add	r0, sp, #112
 496 003e FFF7FEFF 		bl	HAL_RCC_OscConfig
 497              	.LVL12:
 149:Core/Src/main.c ****   {
 498              		.loc 1 149 6 view .LVU143
 499 0042 C8B9     		cbnz	r0, .L32
 155:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 500              		.loc 1 155 3 is_stmt 1 view .LVU144
 155:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 501              		.loc 1 155 31 is_stmt 0 view .LVU145
 502 0044 0F23     		movs	r3, #15
 503 0046 1793     		str	r3, [sp, #92]
 157:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 504              		.loc 1 157 3 is_stmt 1 view .LVU146
 157:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 505              		.loc 1 157 34 is_stmt 0 view .LVU147
 506 0048 0221     		movs	r1, #2
 507 004a 1891     		str	r1, [sp, #96]
 158:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 508              		.loc 1 158 3 is_stmt 1 view .LVU148
 158:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 509              		.loc 1 158 35 is_stmt 0 view .LVU149
 510 004c 0023     		movs	r3, #0
 511 004e 1993     		str	r3, [sp, #100]
 159:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 512              		.loc 1 159 3 is_stmt 1 view .LVU150
 159:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 513              		.loc 1 159 36 is_stmt 0 view .LVU151
 514 0050 4FF48062 		mov	r2, #1024
 515 0054 1A92     		str	r2, [sp, #104]
 160:Core/Src/main.c **** 
 516              		.loc 1 160 3 is_stmt 1 view .LVU152
 160:Core/Src/main.c **** 
 517              		.loc 1 160 36 is_stmt 0 view .LVU153
 518 0056 1B93     		str	r3, [sp, #108]
 162:Core/Src/main.c ****   {
ARM GAS  /tmp/ccLOsia0.s 			page 20


 519              		.loc 1 162 3 is_stmt 1 view .LVU154
 162:Core/Src/main.c ****   {
 520              		.loc 1 162 7 is_stmt 0 view .LVU155
 521 0058 17A8     		add	r0, sp, #92
 522 005a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 523              	.LVL13:
 162:Core/Src/main.c ****   {
 524              		.loc 1 162 6 view .LVU156
 525 005e 68B9     		cbnz	r0, .L33
 166:Core/Src/main.c ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
 526              		.loc 1 166 3 is_stmt 1 view .LVU157
 166:Core/Src/main.c ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
 527              		.loc 1 166 38 is_stmt 0 view .LVU158
 528 0060 40F20123 		movw	r3, #513
 529 0064 0193     		str	r3, [sp, #4]
 167:Core/Src/main.c ****   PeriphClkInit.I2sClockSelection = RCC_I2SCLKSOURCE_SYSCLK;
 530              		.loc 1 167 3 is_stmt 1 view .LVU159
 167:Core/Src/main.c ****   PeriphClkInit.I2sClockSelection = RCC_I2SCLKSOURCE_SYSCLK;
 531              		.loc 1 167 38 is_stmt 0 view .LVU160
 532 0066 0023     		movs	r3, #0
 533 0068 0393     		str	r3, [sp, #12]
 168:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 534              		.loc 1 168 3 is_stmt 1 view .LVU161
 168:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 535              		.loc 1 168 35 is_stmt 0 view .LVU162
 536 006a 0D93     		str	r3, [sp, #52]
 169:Core/Src/main.c ****   {
 537              		.loc 1 169 3 is_stmt 1 view .LVU163
 169:Core/Src/main.c ****   {
 538              		.loc 1 169 7 is_stmt 0 view .LVU164
 539 006c 01A8     		add	r0, sp, #4
 540 006e FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 541              	.LVL14:
 169:Core/Src/main.c ****   {
 542              		.loc 1 169 6 view .LVU165
 543 0072 28B9     		cbnz	r0, .L34
 173:Core/Src/main.c **** 
 544              		.loc 1 173 1 view .LVU166
 545 0074 26B0     		add	sp, sp, #152
 546              	.LCFI11:
 547              		.cfi_remember_state
 548              		.cfi_def_cfa_offset 8
 549              		@ sp needed
 550 0076 10BD     		pop	{r4, pc}
 551              	.L32:
 552              	.LCFI12:
 553              		.cfi_restore_state
 151:Core/Src/main.c ****   }
 554              		.loc 1 151 5 is_stmt 1 view .LVU167
 555 0078 FFF7FEFF 		bl	Error_Handler
 556              	.LVL15:
 557              	.L33:
 164:Core/Src/main.c ****   }
 558              		.loc 1 164 5 view .LVU168
 559 007c FFF7FEFF 		bl	Error_Handler
 560              	.LVL16:
 561              	.L34:
ARM GAS  /tmp/ccLOsia0.s 			page 21


 171:Core/Src/main.c ****   }
 562              		.loc 1 171 5 view .LVU169
 563 0080 FFF7FEFF 		bl	Error_Handler
 564              	.LVL17:
 565              		.cfi_endproc
 566              	.LFE134:
 568              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 569              		.align	2
 570              	.LC0:
 571 0000 5B25645D 		.ascii	"[%d] %lu\000"
 571      20256C75 
 571      00
 572              		.section	.text.main,"ax",%progbits
 573              		.align	1
 574              		.global	main
 575              		.syntax unified
 576              		.thumb
 577              		.thumb_func
 578              		.fpu fpv4-sp-d16
 580              	main:
 581              	.LFB133:
  76:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 582              		.loc 1 76 1 view -0
 583              		.cfi_startproc
 584              		@ args = 0, pretend = 0, frame = 296
 585              		@ frame_needed = 0, uses_anonymous_args = 0
 586 0000 10B5     		push	{r4, lr}
 587              	.LCFI13:
 588              		.cfi_def_cfa_offset 8
 589              		.cfi_offset 4, -8
 590              		.cfi_offset 14, -4
 591 0002 CAB0     		sub	sp, sp, #296
 592              	.LCFI14:
 593              		.cfi_def_cfa_offset 304
  84:Core/Src/main.c **** 
 594              		.loc 1 84 3 view .LVU171
 595 0004 FFF7FEFF 		bl	HAL_Init
 596              	.LVL18:
  91:Core/Src/main.c **** 
 597              		.loc 1 91 3 view .LVU172
 598 0008 FFF7FEFF 		bl	SystemClock_Config
 599              	.LVL19:
  98:Core/Src/main.c ****   MX_I2S2_Init();
 600              		.loc 1 98 3 view .LVU173
 601 000c FFF7FEFF 		bl	MX_GPIO_Init
 602              	.LVL20:
  99:Core/Src/main.c ****   MX_DAC1_Init();
 603              		.loc 1 99 3 view .LVU174
 604 0010 FFF7FEFF 		bl	MX_I2S2_Init
 605              	.LVL21:
 100:Core/Src/main.c ****   MX_USART1_UART_Init();
 606              		.loc 1 100 3 view .LVU175
 607 0014 FFF7FEFF 		bl	MX_DAC1_Init
 608              	.LVL22:
 101:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 609              		.loc 1 101 3 view .LVU176
 610 0018 FFF7FEFF 		bl	MX_USART1_UART_Init
ARM GAS  /tmp/ccLOsia0.s 			page 22


 611              	.LVL23:
 103:Core/Src/main.c ****   /* USER CODE END 2 */
 612              		.loc 1 103 3 view .LVU177
 613 001c 6421     		movs	r1, #100
 614 001e 1948     		ldr	r0, .L40
 615 0020 FFF7FEFF 		bl	utils_print_init
 616              	.LVL24:
 617 0024 11E0     		b	.L38
 618              	.LVL25:
 619              	.L37:
 620              	.LBB10:
 621              	.LBB11:
 122:Core/Src/main.c ****       UTILS_PRINT_DEBUG(msg);
 622              		.loc 1 122 7 discriminator 3 view .LVU178
 623 0026 3DF81430 		ldrh	r3, [sp, r4, lsl #1]
 624 002a 2246     		mov	r2, r4
 625 002c 1649     		ldr	r1, .L40+4
 626 002e 0AA8     		add	r0, sp, #40
 627 0030 FFF7FEFF 		bl	sprintf
 628              	.LVL26:
 123:Core/Src/main.c ****     }
 629              		.loc 1 123 7 discriminator 3 view .LVU179
 123:Core/Src/main.c ****     }
 630              		.loc 1 123 7 discriminator 3 view .LVU180
 631 0034 0AA9     		add	r1, sp, #40
 632 0036 1548     		ldr	r0, .L40+8
 633 0038 FFF7FEFF 		bl	sprintf
 634              	.LVL27:
 123:Core/Src/main.c ****     }
 635              		.loc 1 123 7 discriminator 3 view .LVU181
 636 003c 0AA8     		add	r0, sp, #40
 637 003e FFF7FEFF 		bl	utils_print_private
 638              	.LVL28:
 123:Core/Src/main.c ****     }
 639              		.loc 1 123 7 discriminator 3 view .LVU182
 123:Core/Src/main.c ****     }
 640              		.loc 1 123 29 discriminator 3 view .LVU183
 121:Core/Src/main.c ****       sprintf(msg, "[%d] %lu", i, i2s_buf[i]);
 641              		.loc 1 121 34 discriminator 3 view .LVU184
 121:Core/Src/main.c ****       sprintf(msg, "[%d] %lu", i, i2s_buf[i]);
 642              		.loc 1 121 35 is_stmt 0 discriminator 3 view .LVU185
 643 0042 0134     		adds	r4, r4, #1
 644              	.LVL29:
 121:Core/Src/main.c ****       sprintf(msg, "[%d] %lu", i, i2s_buf[i]);
 645              		.loc 1 121 35 discriminator 3 view .LVU186
 646 0044 A4B2     		uxth	r4, r4
 647              	.LVL30:
 648              	.L36:
 121:Core/Src/main.c ****       sprintf(msg, "[%d] %lu", i, i2s_buf[i]);
 649              		.loc 1 121 26 is_stmt 1 discriminator 1 view .LVU187
 121:Core/Src/main.c ****       sprintf(msg, "[%d] %lu", i, i2s_buf[i]);
 650              		.loc 1 121 5 is_stmt 0 discriminator 1 view .LVU188
 651 0046 132C     		cmp	r4, #19
 652 0048 EDD9     		bls	.L37
 653              	.LVL31:
 654              	.L38:
 121:Core/Src/main.c ****       sprintf(msg, "[%d] %lu", i, i2s_buf[i]);
ARM GAS  /tmp/ccLOsia0.s 			page 23


 655              		.loc 1 121 5 discriminator 1 view .LVU189
 656              	.LBE11:
 657              	.LBE10:
 109:Core/Src/main.c ****   {
 658              		.loc 1 109 3 is_stmt 1 view .LVU190
 659              	.LBB13:
 114:Core/Src/main.c ****     char msg[256] = "";
 660              		.loc 1 114 5 view .LVU191
 114:Core/Src/main.c ****     char msg[256] = "";
 661              		.loc 1 114 14 is_stmt 0 view .LVU192
 662 004a 2822     		movs	r2, #40
 663 004c 0021     		movs	r1, #0
 664 004e 6846     		mov	r0, sp
 665 0050 FFF7FEFF 		bl	memset
 666              	.LVL32:
 115:Core/Src/main.c **** 
 667              		.loc 1 115 5 is_stmt 1 view .LVU193
 115:Core/Src/main.c **** 
 668              		.loc 1 115 10 is_stmt 0 view .LVU194
 669 0054 0024     		movs	r4, #0
 670 0056 0A94     		str	r4, [sp, #40]
 671 0058 FC22     		movs	r2, #252
 672 005a 2146     		mov	r1, r4
 673 005c 0BA8     		add	r0, sp, #44
 674 005e FFF7FEFF 		bl	memset
 675              	.LVL33:
 117:Core/Src/main.c ****     HAL_Delay(500);
 676              		.loc 1 117 5 is_stmt 1 view .LVU195
 677 0062 2021     		movs	r1, #32
 678 0064 4FF09040 		mov	r0, #1207959552
 679 0068 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 680              	.LVL34:
 118:Core/Src/main.c ****     HAL_I2S_Receive(&hi2s2, i2s_buf, sizeof(i2s_buf)/sizeof(*i2s_buf), 100);
 681              		.loc 1 118 5 view .LVU196
 682 006c 4FF4FA70 		mov	r0, #500
 683 0070 FFF7FEFF 		bl	HAL_Delay
 684              	.LVL35:
 119:Core/Src/main.c **** 
 685              		.loc 1 119 5 view .LVU197
 686 0074 6423     		movs	r3, #100
 687 0076 1422     		movs	r2, #20
 688 0078 6946     		mov	r1, sp
 689 007a 0548     		ldr	r0, .L40+12
 690 007c FFF7FEFF 		bl	HAL_I2S_Receive
 691              	.LVL36:
 121:Core/Src/main.c ****       sprintf(msg, "[%d] %lu", i, i2s_buf[i]);
 692              		.loc 1 121 5 view .LVU198
 693              	.LBB12:
 121:Core/Src/main.c ****       sprintf(msg, "[%d] %lu", i, i2s_buf[i]);
 694              		.loc 1 121 10 view .LVU199
 121:Core/Src/main.c ****       sprintf(msg, "[%d] %lu", i, i2s_buf[i]);
 695              		.loc 1 121 5 is_stmt 0 view .LVU200
 696 0080 E1E7     		b	.L36
 697              	.L41:
 698 0082 00BF     		.align	2
 699              	.L40:
 700 0084 00000000 		.word	huart1
ARM GAS  /tmp/ccLOsia0.s 			page 24


 701 0088 00000000 		.word	.LC0
 702 008c 04000000 		.word	print_config+4
 703 0090 00000000 		.word	hi2s2
 704              	.LBE12:
 705              	.LBE13:
 706              		.cfi_endproc
 707              	.LFE133:
 709              		.comm	huart1,132,4
 710              		.comm	hi2s2,72,4
 711              		.comm	hdac1,20,4
 712              		.text
 713              	.Letext0:
 714              		.file 3 "/home/filip/gccarm/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/machine/_defa
 715              		.file 4 "/home/filip/gccarm/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/sys/_stdint.h
 716              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 717              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 718              		.file 7 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303xe.h"
 719              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 720              		.file 9 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 721              		.file 10 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc_ex.h"
 722              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 723              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 724              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dac.h"
 725              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_i2s.h"
 726              		.file 15 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 727              		.file 16 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 728              		.file 17 "/home/filip/gccarm/gcc-arm-none-eabi-9-2020-q2-update/lib/gcc/arm-none-eabi/9.3.1/includ
 729              		.file 18 "/home/filip/gccarm/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/sys/_types.h
 730              		.file 19 "/home/filip/gccarm/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/sys/reent.h"
 731              		.file 20 "/home/filip/gccarm/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/sys/lock.h"
 732              		.file 21 "Core/Src/utils.h"
 733              		.file 22 "/home/filip/gccarm/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/stdio.h"
 734              		.file 23 "<built-in>"
ARM GAS  /tmp/ccLOsia0.s 			page 25


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccLOsia0.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccLOsia0.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccLOsia0.s:159    .text.MX_GPIO_Init:0000000000000094 $d
     /tmp/ccLOsia0.s:166    .text.Error_Handler:0000000000000000 $t
     /tmp/ccLOsia0.s:173    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccLOsia0.s:205    .text.MX_I2S2_Init:0000000000000000 $t
     /tmp/ccLOsia0.s:211    .text.MX_I2S2_Init:0000000000000000 MX_I2S2_Init
     /tmp/ccLOsia0.s:270    .text.MX_I2S2_Init:0000000000000030 $d
                            *COM*:0000000000000048 hi2s2
     /tmp/ccLOsia0.s:276    .text.MX_DAC1_Init:0000000000000000 $t
     /tmp/ccLOsia0.s:282    .text.MX_DAC1_Init:0000000000000000 MX_DAC1_Init
     /tmp/ccLOsia0.s:347    .text.MX_DAC1_Init:0000000000000038 $d
                            *COM*:0000000000000014 hdac1
     /tmp/ccLOsia0.s:353    .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/ccLOsia0.s:359    .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/ccLOsia0.s:420    .text.MX_USART1_UART_Init:0000000000000030 $d
                            *COM*:0000000000000084 huart1
     /tmp/ccLOsia0.s:426    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccLOsia0.s:433    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccLOsia0.s:569    .rodata.main.str1.4:0000000000000000 $d
     /tmp/ccLOsia0.s:573    .text.main:0000000000000000 $t
     /tmp/ccLOsia0.s:580    .text.main:0000000000000000 main
     /tmp/ccLOsia0.s:700    .text.main:0000000000000084 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_I2S_Init
HAL_DAC_Init
HAL_DAC_ConfigChannel
HAL_UART_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
utils_print_init
sprintf
utils_print_private
HAL_GPIO_TogglePin
HAL_Delay
HAL_I2S_Receive
print_config
